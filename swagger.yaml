openapi: 3.0.0
info:
  description: "Used to search for possible datasets."
  version: "v0.1.0"
  title: "Search for a dataset"
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
servers:
  - url: http://cat.ons.digital/v1
    description: "Staging API for prototype"
tags:
- name: "Public"
paths:
  /datasets:
    get:
      tags:
      - "Public"
      summary: "Returns a list of search results based on the search term"
      parameters:
      - $ref: '#/components/parameters/q'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/dimensions'
      - $ref: '#/components/parameters/topics'
      responses:
        200:
          description: "A json list containing search results of datasets which are relevant to the search term"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasets'
        400:
          $ref: '#/components/responses/InvalidRequestError'
        500:
          $ref: '#/components/responses/InternalError'
    options:
      tags:
      - "Public"
      summary: "Information about the communication options available for the target resource"
      responses:
        204:
          description: "No Content"
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: string
              description: "The methods allowed access against this resource as a comma separated list."
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: "The web urls allowed access against this resource as a comma separated list."
              example: "*"
            Access-Control-Max-Age:
              schema:
                type: integer
              description: "Header indicates how long the results of a preflight request can be cached."
              example: 86400
        500:
          $ref: '#/components/responses/InternalError'
  /dimensions:
    get:
      tags:
      - "Public"
      summary: "Returns a list of dimensions that exist for the datasets endpoint."
      responses:
        200:
          description: "A json list containing dimensions that exist for datasets accessible by the datasets endpoint. Should be used to check what dimensions are filterable on the datasets endpoint." 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dimensions'
        500:
          $ref: '#/components/responses/InternalError'
    options:
      tags:
      - "Public"
      summary: "Information about the communication options available for the target resource"
      responses:
        204:
          description: "No Content"
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: string
              description: "The methods allowed access against this resource as a comma separated list."
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: "The web urls allowed access against this resource as a comma separated list."
              example: "*"
            Access-Control-Max-Age:
              schema:
                type: integer
              description: "Header indicates how long the results of a preflight request can be cached."
              example: 86400
        500:
          $ref: '#/components/responses/InternalError'
  /taxonomy:
    get:
      tags:
      - "Public"
      summary: "Returns a nested hierarchy of topics known as taxonomy"
      responses:
        200:
          description: "A json list o topics broken down into 3 levels of hierarchy."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxonomy'
        500:
          $ref: '#/components/responses/InternalError'
    options:
      tags:
      - "Public"
      summary: "Information about the communication options available for the target resource"
      responses:
        204:
          description: "No Content"
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: string
              description: "The methods allowed access against this resource as a comma separated list."
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: "The web urls allowed access against this resource as a comma separated list."
              example: "*"
            Access-Control-Max-Age:
              schema:
                type: integer
              description: "Header indicates how long the results of a preflight request can be cached."
              example: 86400
        500:
          $ref: '#/components/responses/InternalError'
  /taxonomy/{topic}:
    get:
      tags:
      - "Public"
      summary: "Returns a single topic resource with data on related parent and child topic resources within the taxonomy."
      parameters:
      - $ref: '#/components/parameters/topic'
      responses:
        200:
          description: "A json list o topics broken down into 3 levels of hierarchy."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalError'
    options:
      tags:
      - "Public"
      summary: "Information about the communication options available for the target resource"
      parameters:
      - $ref: '#/components/parameters/topic'
      responses:
        204:
          description: "No Content"
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: string
              description: "The methods allowed access against this resource as a comma separated list."
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: "The web urls allowed access against this resource as a comma separated list."
              example: "*"
            Access-Control-Max-Age:
              schema:
                type: integer
              description: "Header indicates how long the results of a preflight request can be cached."
              example: 86400
        500:
          $ref: '#/components/responses/InternalError'
components:
  parameters:
    q:
      name: q
      description: "The searchable term to find relevant datasets."
      in: query
      required: true
      schema:
        type: string
    limit:
      name: limit
      description: "The number of items requested, defaulted to 50 and limited to 1000."
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 50
    offset:
      name: offset
      description: "The first row of resources to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter."
      in: query
      schema:
        type: integer
        minimum: 0
        default: 0
    dimensions:
      name: dimensions
      description: "A comma separated list of a maximum of 10 separate dimensions to filter the dataset search API against dimensions.name field."
      in: query
      schema:
        type: string
    topics:
      name: topics
      description: "A comma separated list of a maximum of 10 separate topics to filter the dataset search API against topic fields, topic1, topic2 and topic3. Filtering across the levels is not recommended and will likely result in there being no results being returned."
      in: query
      schema:
        type: string
    topic:
      name: topic
      description: "A single topic name"
      required: true
      in: path
      schema:
        type: string
  schemas:
    Datasets:
      description: "The resulting resource of the completed search against a dimension hierarchy."
      type: object
      required: ["count","limit", "items", "offset", "total_count"]
      properties:
        count:
          description: "The number of items returned."
          type: integer
        items:
          description: "The results of the postcode search."
          type: array
          items:
            $ref: '#/components/schemas/SearchResponse'
        limit:
          description: "The number of items requested, defaulted to 50 and limited to 1000."
          type: integer
        offset:
          description: "The first row of items to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter. The total number of items that one can page through is limited to 1000 items."
          type: integer
        total_count:
          description: "The total number of resources that matched request."
          type: integer
          maximum: 10000
    SearchResponse:
      description: "An individual result (dataset) based on the search query."
      type: object
      required: ["description", "link", "title"]
      properties:
        alias:
          type: string
          description: "The shortened version of the title, usually an acronym."
          example: "CPIH01"
        description:
          type: string
          description: "A description of the dataset."
        dimensions:
          type: array
          description: "A list of dimension objects that are represented in the dataset."
          items:
            type: object
            properties:
              label:
                type: string
                description: "A human friendly label for the dimension name."
              name:
                type: string
                description: "The name of the dimension stored against a dataset. Use this value to filter a dimension when searching."
        link: 
          type: string
          description: "A link to the dataset on the ons website."
        title:
          type: string
          description: "The name in which the dataset is known."
        topic1:
          type: string
          description: "Level 1 topic that the dataset relates to."
        topic2:
          type: string
          description: "Level 2 topic that the dataset relates to."
        topic3:
          type: string
          description: "Level 3 topic that the dataset relates to."
        matches:
          $ref: '#/components/schemas/Matches'
    Matches:
      description: "A list of text matches across fields that were analysed. Embeds html tags <b><em>{matched piece of text}<\b><\em>. Can be used by web ui to desplay the matched data."
      type: object
      properties:
        alias:
          description: "Highlighted alias field due to matched pieces of text."
          type: array
          items:
            type: string
        description:
          description: "Highlighted description field due to matched pieces of text."
          type: array
          items:
            type: string
        dimensions.label:
          description: "Highlighted dimensions label field due to matching text."
          type: array
          items:
            type: string
        dimensions.name:
          description: "Highlighted dimensions name field due to matching keyword."
          type: array
          items:
            type: string
        title:
          description: "Highlighted title field due to matched pieces of text."
          type: array
          items:
            type: string
        topic1:
          description: "Highlighted level 1 topic field due to query term matching keyword."
          type: array
          items:
            type: string
        topic2:
          description: "Highlighted level 2 topic field due to query term matching keyword."
          type: array
          items:
            type: string
        topic3:
          description: "Highlighted level 3 topic field due to query term matching keyword."
          type: array
          items:
            type: string
    Dimensions:
      type: object
      properties:
        total_count:
          description: "The total number of dimensions listed in doc."
          type: integer
        items:
          description: "A list of dimensions, containing a name and label field. The name field can be used to filter the datasets endpoint via the dimensions parameter."
          type: array
          items:
            required: [label,name]
            type: object
            properties:
              label:
                description: "A human readable value of the dimension."
                type: string
              name:
                description: "The dimension value to use as a filter for the dimensions query parameter on the datasets endpoint (when searching for datasets)."
                type: string
    Taxonomy:
      type: object
      properties:
        topics:
          description: "A hierarchical structure to describe how topics relate to one another through parent/child relationships."
          type: array
          items:
            $ref: '#/components/schemas/Topics'
    Topics:
      type: object
      required: [
        title,
        filterable_title
      ]
      properties:
        title:
          description: "A human friendly title of a topic at the highest level of the taxonomy, level 1."
          type: string
        filterable_title:
          description: "A separate formatted title that has removed all whitespace and grammar to allow better filtering and searching against a topic title."
          type: string
        child_topics:
          description: "A list of level 2 topics that are related to this topic in the taxonomy hierarchy."
          type: array
          items:
            $ref: '#/components/schemas/ChildTopics'
    ChildTopics:
      type: object
      properties:
        title:
          description: "A human friendly title of a topic at the highest level of the taxonomy, level 2."
          type: string
        filterable_title:
          description: "A separate formatted title that has removed all whitespace and grammar to allow better filtering and searching against a topic title."
          type: string
        child_topics:
          description: "A list of level 3 topics that are related to this topic in the taxonomy hierarchy."
          type: array
          items:
            $ref: '#/components/schemas/GrandchildTopics'
    GrandchildTopics:
      type: object
      properties:
        title:
          description: "A human friendly title of a topic at the highest level of the taxonomy, level 3."
          type: string
        filterable_title:
          description: "A separate formatted title that has removed all whitespace and grammar to allow better filtering and searching against a topic title."
          type: string
    Topic:
      type: object
      required: [
        title,
        topic
      ]
      properties:
        parent_topic:
          description: "The parent topic of this topic resource that the topic relates to in the taxonomy."
          type: string
        title:
          description: "A human friendly title of the topic."
          type: string
        topic:
          description: "Same as the title but has all whitespace and grammar removed to allow better filtering and searching against a topic."
          type: string
        child_topics:
          description: "A list of child topics that this topic resource relates to in the taxonomy."
          type: array
          items:
            type: string
  responses:
    InvalidRequestError:
      description: "Failed to process the request due to invalid request."
    InternalError:
      description: "Failed to process the request due to an internal error."
    NotFoundError:
      description: "Failed to find resource."
